// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyKhoaHoc.Infrastructure.Data;

#nullable disable

namespace QuanLyKhoaHoc.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Answers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("TradingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillStatusId");

                    b.HasIndex("TradingCode")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("CourseId", "UserId")
                        .IsUnique();

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.BillStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BillStatus");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfComments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("NumberOfLikes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CertificateTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CertificateTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.CertificateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CertificateTypes");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.CommentBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("Edited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ReplyCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId");

                    b.ToTable("CommentBlogs");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.ConfirmEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpiryTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("DATEADD(day, 30, GETDATE())");

                    b.Property<bool>("IsConfirm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConfirmCode")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("ConfirmEmails");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("ImageCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPurchases")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("NumberOfStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<int>("TotalCourseDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.CourseSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CourseSubjects");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.DoHomework", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActualOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoneTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HomeworkStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsFinished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PracticeId")
                        .HasColumnType("int");

                    b.Property<int>("RegisterStudyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PracticeId");

                    b.HasIndex("RegisterStudyId");

                    b.HasIndex("UserId");

                    b.ToTable("DoHomeworks");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.LearningProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("RegisterStudyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentSubjectId");

                    b.HasIndex("RegisterStudyId");

                    b.HasIndex("UserId");

                    b.ToTable("LearningProgress");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.LikeBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("Unlike")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId", "BlogId")
                        .IsUnique();

                    b.ToTable("LikeBlogs");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.MakeQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("NumberOfAnswers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("MakeQuestions");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Practice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ExpectOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LanguageProgrammingId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("MediumScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PracticeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("LanguageProgrammingId");

                    b.HasIndex("SubjectDetailId");

                    b.ToTable("Practices");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.ProgramingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageName")
                        .IsUnique();

                    b.ToTable("ProgramingLanguages");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiryTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("DATEADD(day, 30, GETDATE())");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.RegisterStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentSubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DoneTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsFinished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PercentComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("RegisterTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CurrentSubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("RegisterStudys");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleCode")
                        .IsUnique();

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.RunTestCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoHomeworkId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RunTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("TestCaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoHomeworkId");

                    b.HasIndex("TestCaseId");

                    b.ToTable("RunTestCases");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.SubjectDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsFinished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LinkVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectDetails");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.TestCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Output")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PracticeId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramingLanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PracticeId");

                    b.HasIndex("ProgramingLanguageId");

                    b.ToTable("TestCases");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CertificateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("WardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasIndex("WardId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Answers", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.MakeQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("Answers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Bill", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.BillStatus", "BillStatus")
                        .WithMany("Bills")
                        .HasForeignKey("BillStatusId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Course", "Course")
                        .WithMany("Bills")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("BillStatus");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Blog", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "Creator")
                        .WithMany("Blogs")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Certificate", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.CertificateType", "CertificateType")
                        .WithMany("Certificates")
                        .HasForeignKey("CertificateTypeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("CertificateType");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.CommentBlog", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Blog", "Blog")
                        .WithMany("CommentBlogs")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.CommentBlog", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("CommentBlogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.ConfirmEmail", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("ConfirmEmails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Course", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "Creator")
                        .WithMany("Courses")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Course", "Course")
                        .WithMany("CourseSubjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Subject", "Subject")
                        .WithMany("CourseSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.District", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.DoHomework", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Practice", "Practice")
                        .WithMany("DoHomeworks")
                        .HasForeignKey("PracticeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.RegisterStudy", "RegisterStudy")
                        .WithMany("DoHomeworks")
                        .HasForeignKey("RegisterStudyId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("DoHomeworks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Practice");

                    b.Navigation("RegisterStudy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.LearningProgress", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Subject", "CurrentSubject")
                        .WithMany("LearningProgresses")
                        .HasForeignKey("CurrentSubjectId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.RegisterStudy", "RegisterStudy")
                        .WithMany("LearningProgresses")
                        .HasForeignKey("RegisterStudyId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("LearningProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("CurrentSubject");

                    b.Navigation("RegisterStudy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.LikeBlog", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Blog", "Blog")
                        .WithMany("LikeBlogs")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("LikeBlogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.MakeQuestion", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.SubjectDetail", "SubjectDetail")
                        .WithMany("MakeQuestions")
                        .HasForeignKey("SubjectDetailId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("MakeQuestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("SubjectDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Notification", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Permission", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Practice", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.ProgramingLanguage", "ProgramingLanguage")
                        .WithMany("Practices")
                        .HasForeignKey("LanguageProgrammingId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.SubjectDetail", "SubjectDetail")
                        .WithMany("Practices")
                        .HasForeignKey("SubjectDetailId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("ProgramingLanguage");

                    b.Navigation("SubjectDetail");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.RegisterStudy", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Course", "Course")
                        .WithMany("RegisterStudies")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Subject", "CurrentSubject")
                        .WithMany("RegisterStudies")
                        .HasForeignKey("CurrentSubjectId")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.User", "User")
                        .WithMany("RegisterStudies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CurrentSubject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.RunTestCase", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.DoHomework", "DoHomework")
                        .WithMany("RunTestCases")
                        .HasForeignKey("DoHomeworkId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.TestCase", "TestCase")
                        .WithMany("RunTestCases")
                        .HasForeignKey("TestCaseId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("DoHomework");

                    b.Navigation("TestCase");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.SubjectDetail", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Subject", "Subject")
                        .WithMany("SubjectDetails")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.TestCase", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Practice", "Practice")
                        .WithMany("TestCases")
                        .HasForeignKey("PracticeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.ProgramingLanguage", "ProgramingLanguage")
                        .WithMany("TestCases")
                        .HasForeignKey("ProgramingLanguageId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Practice");

                    b.Navigation("ProgramingLanguage");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.User", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Certificate", "Certificate")
                        .WithMany("Users")
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.District", "District")
                        .WithMany("Users")
                        .HasForeignKey("DistrictId");

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Province", "Province")
                        .WithMany("Users")
                        .HasForeignKey("ProvinceId");

                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.Ward", "Ward")
                        .WithMany("Users")
                        .HasForeignKey("WardId");

                    b.Navigation("Certificate");

                    b.Navigation("District");

                    b.Navigation("Province");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Ward", b =>
                {
                    b.HasOne("QuanLyKhoaHoc.Domain.Entities.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.BillStatus", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Blog", b =>
                {
                    b.Navigation("CommentBlogs");

                    b.Navigation("LikeBlogs");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Certificate", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.CertificateType", b =>
                {
                    b.Navigation("Certificates");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.CommentBlog", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Course", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CourseSubjects");

                    b.Navigation("RegisterStudies");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.District", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.DoHomework", b =>
                {
                    b.Navigation("RunTestCases");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.MakeQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Practice", b =>
                {
                    b.Navigation("DoHomeworks");

                    b.Navigation("TestCases");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.ProgramingLanguage", b =>
                {
                    b.Navigation("Practices");

                    b.Navigation("TestCases");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Province", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.RegisterStudy", b =>
                {
                    b.Navigation("DoHomeworks");

                    b.Navigation("LearningProgresses");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Role", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Subject", b =>
                {
                    b.Navigation("CourseSubjects");

                    b.Navigation("LearningProgresses");

                    b.Navigation("RegisterStudies");

                    b.Navigation("SubjectDetails");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.SubjectDetail", b =>
                {
                    b.Navigation("MakeQuestions");

                    b.Navigation("Practices");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.TestCase", b =>
                {
                    b.Navigation("RunTestCases");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.User", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Bills");

                    b.Navigation("Blogs");

                    b.Navigation("CommentBlogs");

                    b.Navigation("ConfirmEmails");

                    b.Navigation("Courses");

                    b.Navigation("DoHomeworks");

                    b.Navigation("LearningProgresses");

                    b.Navigation("LikeBlogs");

                    b.Navigation("MakeQuestions");

                    b.Navigation("Notifications");

                    b.Navigation("Permissions");

                    b.Navigation("RefreshTokens");

                    b.Navigation("RegisterStudies");
                });

            modelBuilder.Entity("QuanLyKhoaHoc.Domain.Entities.Ward", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
